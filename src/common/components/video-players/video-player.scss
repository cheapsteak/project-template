.video-player {
  $control-ui-height: 80px;
  $component-bg-color: #2B2A2A;

  background-color: $component-bg-color;

  video {
    top: 0;
    left: 0;
    height: 100%;
    width: 100%;
  }

  &.no-zoom {
    .video-wrapper {
      transform: translate(0,0) !important;
    }

    .close-button {
      display: none;
    }

    .video-overlay {
      display: none;
    }
  }

  .video-wrapper {
    position: relative;
    width: 100%;
    height: 100%;
    overflow: hidden;
  }

  .video-overlay {
    @include absolute-100;

    // This is a fix for video overlay leaving a small gap (not being able to cover whats behind it)
    top: -1px;
    left: -1px;
    width: 101%;
    height: 101%;
    background-color: rgba(0,0,0,0.9);
    z-index: 10;
  }

  .label-duration {
    color: white;
    @include scale-prop('font-size', 12);
    position: absolute;
    top: 25%;
    right: 1%;
    transform: translateY(-50%);
  }

  .simple-progress-bar {
    position: absolute;
    left: 0;
    bottom: 0;
    width: 100%;
    height: 8px;
    background-color: $component-bg-color;

    & > span {
      position: absolute;
      left: 0;
      top: 0;
      height: 100%;
      background-color: #8F8F8F;
      transition: width 0.1s ease-out;
    }
  }

  .controls {
    position: absolute;
    left: 0;
    bottom: 0;
    display: flex;
    align-items: bottom;
    width: 100%;
    // @include scale('height', 80px, #{(80/1400 * 100)}vw, 140px);
    // @include scale-prop('height', 80);
    height: 80px;
    background-color: rgba(143, 143, 143, 0.5);
    align-items: flex-end;
    justify-content: center;
    z-index: 20;
  }

  .control-group, .timeline {
    height: 50%;
  }

  .control-group {
    // flex-grow: 0;
    // flex-shrink: 0;
    @include scale-prop(min-width, 180); // needed for tablet portrait
    display: flex;
    flex: 1;
    align-items: center;
    justify-content: center;
    background-color: #8F8F8F;

    a {
      display: block;
      height: 100%;
    }

    .button-wrapper {
      @include flex-center;
      position: relative;
      height: 100%;

      // When there is only 3 buttons (grid, chapter)
      &:nth-child(1):nth-last-child(3),
      &:nth-child(2):nth-last-child(2),
      &:nth-child(3):nth-last-child(1) {
          width: 25%;
      }

      // When there is only 4 buttons (narrative)
      &:nth-child(1):nth-last-child(4),
      &:nth-child(2):nth-last-child(3),
      &:nth-child(3):nth-last-child(2),
      &:nth-child(4):nth-last-child(1) {
          width: 22%;
      }
    }

    .button {
      display: flex;
      justify-content: center;
      align-items: center;
      flex: 1;
      cursor: pointer;
      opacity: 0.6;
      transition: opacity 0.3s ease-out;

      &:hover {
        opacity: 1;
      }

      &.play-button {
        svg {
          // width: 12px;
          @include scale-prop('width', 12);
        }
      }

      svg {
        fill: white;
        @include scale-prop('width', 20);
        @include scale-prop('height', 15); 

        * {
          fill: white;
        }
      }
    }
  }

  .timeline {
    width: 86.428%;
  }

  .end-overlay {
    position: absolute;
    left: 0;
    top: 0;
    width: 100%;
    height: 100%;
    z-index: 50;
    opacity: 0;

    .end-overlay-ui {
      position: relative;
      top: 41%;
      transform: translateY(-50%);
    }

    .ending-cards {
      position: relative;
      display: flex;
      justify-content: center;
      overflow: hidden;

      & > .ending-card {
        @include scale-prop('margin', 20);
      }
    }

    .replay-group {
      @include scale-prop('width', 90);
      @include scale-prop('height', 115);
      @include scale-prop('bottom', -65);
      position: absolute;
      left: 50%;
      transform: translate(-50%, 50%);
      display: flex;
      align-items: center;
      justify-content: space-around;
      flex-direction: column;
    }

    .replay-button {
      @include scale-prop('width', 65);
      @include scale-prop('height', 65);
      border-radius: 50%;
      display: flex;
      align-items: center;
      justify-content: center;
      background-color: rgba(143,143,143,0.3);
      cursor: pointer;

      &:hover {
        svg {
          transform: rotate(180deg) translateZ(0);
          transition: transform 0.3s ease;
        }

        & + .replay-label {
          color: rgba(255,255,255,0.6);
        }
      }

      svg {
        width: 50%;
        transition: transform 0.3s ease;
      }
    }

    .replay-label {
      position:block;
      font-weight: bold;
      @include scale-prop('font-size', 28);
      color: rgba(255,255,255,0.4);
    }

    .replay-group-chapter {
      $group-width: 35%;
      $group-height: 30%;
      position: absolute;
      width: $group-width;
      min-width: 220px;
      height: $group-height;
      top: calc(50% - #{$group-height * 0.5});
      left: calc(50% - #{$group-width * 0.5});

      .replay-button {
        position: relative;
        width: 30%;
        height: 0;
        padding: 15% 0;
        background-color: #F2F2F2;
        box-shadow: 0px 0px 12px 12px rgba(0,0,0,0.15);

        svg {
          max-width: 30%;
        }

        &:after {
          content: '';
          position: absolute;
          transform: translate(-50%, -50%);
          top: 50%;
          left: 50%;
          width: 140%;
          height: 140%;
          background-color: #FFFFFF;
          opacity: 0.05;
          border-radius: 50%;
        }
      }

      .replay-label {
        @include scale-prop('font-size', 28);
        color: #F2F2F2;
      }
    }
  }
}
